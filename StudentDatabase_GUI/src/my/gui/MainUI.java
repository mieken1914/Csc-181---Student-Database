/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.gui;

import java.security.interfaces.RSAKey;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.Scanner;

import my.info.Student_Info;

public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    public MainUI() {
    	Connection con = null;
    	try{
    		
			Class.forName("org.postgresql.Driver");
			con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/student_db", "postgres", "apipahdessopolao");

			
		} catch(Exception ex){
			System.out.println(ex.getMessage());
		}
    	initComponents(con);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents(Connection con) {

        uiScrollPane = new javax.swing.JScrollPane();
        dbTable = new javax.swing.JTable();
        buttonView = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonRefresh = new javax.swing.JButton();
        uiMenuBar = new javax.swing.JMenuBar();
        AccountMenu = new javax.swing.JMenu();
        accountAdd = new javax.swing.JMenuItem();
        accountSearch = new javax.swing.JMenuItem();
        accountDelete = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        EditMenu = new javax.swing.JMenu();
        editUpdateSelected = new javax.swing.JMenuItem();
        editUpdateSearch = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        

        Object[][] db_info = new Object[1000][4];

        try{
        	PreparedStatement stmt = con.prepareStatement("SELECT idnum FROM student");
        	
        	ResultSet rs = stmt.executeQuery();
        	

            int ctr=0;
            while(rs.next()){
       
            	Student_Info temp = new Student_Info(rs.getInt("idnum"), con);
            	db_info[ctr][0] = temp.getIdnum();
            	db_info[ctr][1] = temp.getL_name().toUpperCase() + ", " + temp.getF_name().charAt(0) + ". " + temp.getM_name().charAt(0) + ". ";
            	db_info[ctr][2] = temp.getGender();
            	db_info[ctr][3] = temp.getCourse();
           	
            	ctr++;
            	
            }
            
        }catch(Exception ex){
        	System.out.println(ex.getMessage());
        }
        
        
        
        
        dbTable.setModel(new javax.swing.table.DefaultTableModel(
            db_info,
            new String [] {
                "ID Number", "Name", "Gender", "Course"
            }
        ));
        dbTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dbTableMouseClicked(evt);
            }
        });
        uiScrollPane.setViewportView(dbTable);

        buttonView.setText("View");
        buttonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonViewActionPerformed(evt);
            }
        });

        buttonUpdate.setText("Update");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        buttonRefresh.setText("Refresh");
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
                Object[][] db_info = new Object[1000][4];

                try{
                	PreparedStatement stmt = con.prepareStatement("SELECT idnum FROM student");
                	
                	ResultSet rs = stmt.executeQuery();
                	

                    int ctr=0;
                    while(rs.next()){
               
                    	Student_Info temp = new Student_Info(rs.getInt("idnum"), con);
                    	db_info[ctr][0] = temp.getIdnum();
                    	db_info[ctr][1] = temp.getL_name().toUpperCase() + ", " + temp.getF_name().charAt(0) + ". " + temp.getM_name().charAt(0) + ". ";
                    	db_info[ctr][2] = temp.getGender();
                    	db_info[ctr][3] = temp.getCourse();
                   	
                    	ctr++;
                    	
                    }
                    
                }catch(Exception ex){
                	System.out.println(ex.getMessage());
                }
                
                
                
                
                dbTable.setModel(new javax.swing.table.DefaultTableModel(
                    db_info,
                    new String [] {
                        "ID Number", "Name", "Gender", "Course"
                    }
                ));
                
            }
        });

        AccountMenu.setText("Account");

        accountAdd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        accountAdd.setText("Add Account");
        accountAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountAddActionPerformed(evt);
            }
        });
        AccountMenu.add(accountAdd);

        accountSearch.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        accountSearch.setText("Search ID");
        accountSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountSearchActionPerformed(evt);

            }
        });
        AccountMenu.add(accountSearch);

        accountDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        accountDelete.setText("Delete Account");
        accountDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountDeleteActionPerformed(evt);

            }
        });
        AccountMenu.add(accountDelete);

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        AccountMenu.add(exit);

        uiMenuBar.add(AccountMenu);

        EditMenu.setText("Edit");

        editUpdateSelected.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        editUpdateSelected.setText("Update selected account in table");
        editUpdateSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUpdateSelectedActionPerformed(evt);
            }
        });
        EditMenu.add(editUpdateSelected);

        editUpdateSearch.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        editUpdateSearch.setText("Update (using ID Number)");
        editUpdateSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUpdateSearchActionPerformed(evt);
            }
        });
        EditMenu.add(editUpdateSearch);

        uiMenuBar.add(EditMenu);

        setJMenuBar(uiMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(uiScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonRefresh)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(uiScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonView)
                    .addComponent(buttonUpdate)
                    .addComponent(buttonRefresh))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {                                     
        dispose();
    }                                    

    private void accountAddActionPerformed(java.awt.event.ActionEvent evt) {                                           
        new AddUI().setVisible(true);
    }                                          

    private void accountSearchActionPerformed(java.awt.event.ActionEvent evt) {                                              
        new SearchUI().setVisible(true);
    }                                             

    private void accountDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                              
        new SearchDeleteUI().setVisible(true);
    }                                             

    private void dbTableMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        //probably will return the idnumber of the highlighted row
    }                                    

    private void editUpdateSelectedActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        //edit from table
    	int row = dbTable.getSelectedRow();
    	int id = Integer.parseInt(dbTable.getValueAt(row, 0).toString());
    	Connection con = null;
     	try{
     		
 			Class.forName("org.postgresql.Driver");
 			con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/student_db", "postgres", "apipahdessopolao");

 			
 		} catch(Exception ex){
 			System.out.println(ex.getMessage());
 		}
     	Student_Info acct = new Student_Info(id, con);
        new UpdateUI(acct).setVisible(true);
    }                                                  

    private void editUpdateSearchActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        new SearchUpdateUI().setVisible(true);
        
        //edit with search
    }                                                

    private void buttonViewActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    	int row = dbTable.getSelectedRow();
    	int id = Integer.parseInt(dbTable.getValueAt(row, 0).toString());
    	Connection con = null;
     	try{
     		
 			Class.forName("org.postgresql.Driver");
 			con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/student_db", "postgres", "apipahdessopolao");

 			
 		} catch(Exception ex){
 			System.out.println(ex.getMessage());
 		}
     	Student_Info acct = new Student_Info(id, con);
        new DisplayInfo(acct).setVisible(true);
    }                                          

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                             
    	int row = dbTable.getSelectedRow();
    	int id = Integer.parseInt(dbTable.getValueAt(row, 0).toString());
    	Connection con = null;
     	try{
     		
 			Class.forName("org.postgresql.Driver");
 			con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/student_db", "postgres", "apipahdessopolao");

 			
 		} catch(Exception ex){
 			System.out.println(ex.getMessage());
 		}
     	Student_Info acct = new Student_Info(id, con);
        new UpdateUI(acct).setVisible(true);
    }                                            

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JMenu AccountMenu;
    private javax.swing.JMenu EditMenu;
    private javax.swing.JMenuItem accountAdd;
    private javax.swing.JMenuItem accountDelete;
    private javax.swing.JMenuItem accountSearch;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JButton buttonView;
    private javax.swing.JTable dbTable;
    private javax.swing.JMenuItem editUpdateSearch;
    private javax.swing.JMenuItem editUpdateSelected;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenuBar uiMenuBar;
    private javax.swing.JScrollPane uiScrollPane;
    // End of variables declaration                   
}
