/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.gui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import my.info.Student_Info;

/**
 *
 * @author HARRIE
 */
public class SearchDeleteUI extends javax.swing.JFrame {

    /**
     * Creates new form SearchUI
     */
    public SearchDeleteUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	

        labelId = new javax.swing.JLabel();
        textId = new javax.swing.JTextField();
        buttonConfirm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        labelId.setText("Enter ID Number:");

        textId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textIdFocusLost(evt);
            }
        });
        textId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	int id = Integer.parseInt(textId.getText());
            	if(!(checkIdNum(id))){
            		new NotExistingIdError().setVisible(true);
            		return;
            	}
            	Connection con = null;
             	try{
             		
         			Class.forName("org.postgresql.Driver");
         			con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/student_db", "postgres", "apipahdessopolao");

         			
         		} catch(Exception ex){
         			System.out.println(ex.getMessage());
         		}
                buttonConfirmActionPerformed(evt);
                Student_Info delAcct = new Student_Info(id, con);
                dispose();
                new DeleteConfirmMessage(delAcct).setVisible(true);
            }
        });

        buttonConfirm.setText("Confirm");
        buttonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	int id = Integer.parseInt(textId.getText());
            	if(!(checkIdNum(id))){
            		new NotExistingIdError().setVisible(true);
            		return;
            	}
            	Connection con = null;
             	try{
             		
         			Class.forName("org.postgresql.Driver");
         			con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/student_db", "postgres", "apipahdessopolao");

         			
         		} catch(Exception ex){
         			System.out.println(ex.getMessage());
         		}
                buttonConfirmActionPerformed(evt);
                Student_Info delAcct = new Student_Info(id, con);
                dispose();
                new DeleteConfirmMessage(delAcct).setVisible(true);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textId)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(buttonConfirm)
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelId)
                    .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonConfirm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void textIdActionPerformed(java.awt.event.ActionEvent evt) {                                       
        
    }                                      

    private void textIdFocusLost(java.awt.event.FocusEvent evt) {                                 
        // TODO add your handling code here:
    }                                

    private void buttonConfirmActionPerformed(java.awt.event.ActionEvent evt) {                                              
        
    }                                             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchDeleteUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchDeleteUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchDeleteUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchDeleteUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchDeleteUI().setVisible(true);
            }
        });
    }
    public static boolean checkIdNum(int temp_id){
		boolean idnum_checked = false;
		Connection con = null;
    	
		try{
			Class.forName("org.postgresql.Driver");
			con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/student_db", "postgres", "apipahdessopolao");
			PreparedStatement stmt = con.prepareStatement("SELECT idnum FROM student");
			ResultSet rs = stmt.executeQuery();
			
			while(rs.next()){
				if(rs.getInt("idnum") == temp_id){
					idnum_checked = true;
					break;
				}
			}
			
		} catch(Exception ex){
			System.out.println(ex.getMessage());
		}
		
		return idnum_checked;
		
	}

    // Variables declaration - do not modify                     
    private javax.swing.JButton buttonConfirm;
    private javax.swing.JLabel labelId;
    private javax.swing.JTextField textId;
    // End of variables declaration                   
}
